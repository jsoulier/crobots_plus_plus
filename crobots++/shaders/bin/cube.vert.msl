#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBuffer
{
    float4x4 ViewProj;
};

struct main0_out
{
    float3 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float3 in_var_TEXCOORD1 [[attribute(1)]];
    float4 in_var_TEXCOORD2_0 [[attribute(2)]];
    float4 in_var_TEXCOORD2_1 [[attribute(3)]];
    float4 in_var_TEXCOORD2_2 [[attribute(4)]];
    float4 in_var_TEXCOORD2_3 [[attribute(5)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_UniformBuffer& UniformBuffer [[buffer(0)]])
{
    main0_out out = {};
    float4x4 in_var_TEXCOORD2 = {};
    in_var_TEXCOORD2[0] = in.in_var_TEXCOORD2_0;
    in_var_TEXCOORD2[1] = in.in_var_TEXCOORD2_1;
    in_var_TEXCOORD2[2] = in.in_var_TEXCOORD2_2;
    in_var_TEXCOORD2[3] = in.in_var_TEXCOORD2_3;
    out.gl_Position = (in_var_TEXCOORD2 * float4(in.in_var_TEXCOORD0, 1.0)) * UniformBuffer.ViewProj;
    out.out_var_TEXCOORD0 = float3x3(in_var_TEXCOORD2[0].xyz, in_var_TEXCOORD2[1].xyz, in_var_TEXCOORD2[2].xyz) * in.in_var_TEXCOORD1;
    return out;
}

